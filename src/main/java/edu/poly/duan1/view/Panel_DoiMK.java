/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package edu.poly.duan1.view;

import edu.poly.duan1.model.NguoiDung;
import edu.poly.duan1.services.NguoiDungService;
import edu.poly.duan1.services.impl.NguoiDungServiceImpl;
import edu.poly.duan1.ultis.helper;

/**
 *
 * @author ADMIN
 */
public class Panel_DoiMK extends javax.swing.JPanel {

    /**
     * Creates new form Panel_ThongTinCaNhan
     */
    helper helper = new helper();
    private NguoiDung nguoiDung = new NguoiDung();
    NguoiDungService nguoiDungService = new NguoiDungServiceImpl();

    public Panel_DoiMK(NguoiDung nd) {
        initComponents();
        this.nguoiDung = nd;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtXacNhanMK = new edu.poly.duan1.swing.textfield.PasswordField();
        txtMKMoi = new edu.poly.duan1.swing.textfield.PasswordField();
        txtMKCu = new edu.poly.duan1.swing.textfield.PasswordField();
        button1 = new edu.poly.duan1.swing.button.Button();

        setBackground(new java.awt.Color(255, 255, 255));

        txtXacNhanMK.setLabelText("Xác nhận mật khẩu");
        txtXacNhanMK.setShowAndHide(true);

        txtMKMoi.setLabelText("Mật khẩu mới");
        txtMKMoi.setShowAndHide(true);

        txtMKCu.setLabelText("Mật khẩu cũ");
        txtMKCu.setShowAndHide(true);

        button1.setBackground(new java.awt.Color(3, 155, 216));
        button1.setText("Đổi MK");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtXacNhanMK, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                        .addComponent(txtMKMoi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtMKCu, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(185, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(111, Short.MAX_VALUE)
                .addComponent(txtMKCu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(txtMKMoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtXacNhanMK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );
    }// </editor-fold>//GEN-END:initComponents
    Boolean checkNull() {
        if (txtMKCu.getText().isEmpty() || txtMKMoi.getText().isEmpty() || txtXacNhanMK.getText().isEmpty()) {
            helper.error(this, "Không được để trống");
            return false;
        }
        return true;
    }
    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        if (checkNull()) {
            if (!txtMKCu.getText().equals(nguoiDung.getMatKhau())) {
                helper.error(this, "Mật khẩu cũ không đúng");
                return;
            } else if (!txtMKMoi.getText().equals(txtXacNhanMK.getText())) {
                helper.error(this, "2 mật khẩu không khớp nhau");
                return;

            } else {
                nguoiDung.setMatKhau(txtMKMoi.getText());
                nguoiDungService.saveOrUpdate(nguoiDung);
                helper.alert(this, "đổi mật khẩu thành công");
            }
        }
    }//GEN-LAST:event_button1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private edu.poly.duan1.swing.button.Button button1;
    private edu.poly.duan1.swing.textfield.PasswordField txtMKCu;
    private edu.poly.duan1.swing.textfield.PasswordField txtMKMoi;
    private edu.poly.duan1.swing.textfield.PasswordField txtXacNhanMK;
    // End of variables declaration//GEN-END:variables
}
